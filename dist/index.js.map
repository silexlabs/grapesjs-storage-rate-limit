{"version":3,"file":"index.js","mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAQ,0CAA4CD,IAEpDD,EAAK,0CAA4CC,GAClD,CATD,CASyB,oBAAfK,WAA6BA,WAAgC,oBAAXC,OAAyBA,OAASC,MAAO,I,mBCRrG,IAAIC,EAAsB,CCA1BA,EAAwB,CAACP,EAASQ,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAEV,EAASS,IAC5EE,OAAOC,eAAeZ,EAASS,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDF,EAAwB,CAACQ,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFT,EAAyBP,IACH,oBAAXoB,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeZ,EAASoB,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeZ,EAAS,aAAc,CAAEsB,OAAO,GAAO,G,mCCL9D,iBAAgBC,GACd,MAAMC,EAAU,CAEdC,KAAM,OAHkBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,GAMxBG,EAAUN,EAAOO,eAAeC,oBAChCC,EAAiBT,EAAOO,eAAeG,oBAE7CV,EAAOO,eAAeI,WAAW,cAEjC,IAAIC,GAAgB,EAChBC,GAAc,EACdC,EAAa,KAGjBhC,OAAOiC,iBAAiB,gBAAiBC,IACnCH,IACFG,EAAEC,iBACFD,EAAEE,YAAc,GAClB,IAIF,MAAMC,EAAUC,MAAOC,EAAMC,KAE3BC,IAEA,IACKD,IACDtB,EAAOwB,QAAQ,gBAAiBH,GAChCrB,EAAOwB,QAAQ,sBAAuBH,UAGlCf,EAAQmB,MAAMJ,EAAMZ,GACvBa,IACDtB,EAAOwB,QAAQ,eACfxB,EAAOwB,QAAQ,oBAAqBH,GACpCrB,EAAOwB,QAAQ,gBAAiBH,GAEpC,CAAE,MAAOK,GACP,IAAGJ,EAKD,MAAMI,EAJN1B,EAAOwB,QAAQ,gBAAiBE,GAChC1B,EAAOwB,QAAQ,sBAAuBE,GACtC1B,EAAOwB,QAAQ,cAInB,GAIID,EAAgBA,KACpBX,GAAgB,EAChBe,YAAWP,UACT,GAAIP,EAAa,CAEfA,GAAc,EAEd,MAAMQ,EAAOP,EACbA,EAAa,WACPK,EAAQE,GAAM,EACtB,MAEET,GAAgB,CAClB,GACCX,EAAQC,KAAK,EAIlBF,EAAO4B,QAAQC,IAAI,aAAc,CAI/B,WAAMJ,CAAMJ,GACNT,GACFC,GAAc,EACdC,EAAaO,SAEPF,EAAQE,GAAM,EAExB,EAIAD,KAAUU,MAAC7B,GACFK,EAAQwB,KAAKrB,IAGzB,E","sources":["webpack://@silexlabs/grapesjs-storage-rate-limit/webpack/universalModuleDefinition","webpack://@silexlabs/grapesjs-storage-rate-limit/webpack/bootstrap","webpack://@silexlabs/grapesjs-storage-rate-limit/webpack/runtime/define property getters","webpack://@silexlabs/grapesjs-storage-rate-limit/webpack/runtime/hasOwnProperty shorthand","webpack://@silexlabs/grapesjs-storage-rate-limit/webpack/runtime/make namespace object","webpack://@silexlabs/grapesjs-storage-rate-limit/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@silexlabs/grapesjs-storage-rate-limit\"] = factory();\n\telse\n\t\troot[\"@silexlabs/grapesjs-storage-rate-limit\"] = factory();\n})(typeof globalThis !== 'undefined' ? globalThis : (typeof window !== 'undefined' ? window : this), () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default (editor, opts = {}) => {\n  const options = { ...{\n    // default options\n    time: 1000, // ms\n  },  ...opts };\n\n  const storage = editor.StorageManager.getCurrentStorage();\n  const storageOptions = editor.StorageManager.getCurrentOptions();\n\n  editor.StorageManager.setCurrent('rate-limit')\n\n  let isCoolingDown = false;\n  let pendingSave = false;\n  let latestData = null;\n\n  // Prevent reload while cooling down and before saving\n  window.addEventListener('beforeunload', (e) => {\n    if (pendingSave) {\n      e.preventDefault();\n      e.returnValue = '';\n    }\n  });\n\n  // Save the latest data once the cooldown period is over\n  const doStore = async (data, isLater) => {\n    // Start another cooldown period after saving\n    startCooldown();\n    // Save the data and trigger events\n    try {\n      if(isLater) {\n        editor.trigger('storage:start', data)\n        editor.trigger('storage:start:store', data)\n      }\n      // Save the data immediately\n      await storage.store(data, storageOptions);\n      if(isLater) {\n        editor.trigger('storage:end')\n        editor.trigger('storage:end:store', data)\n        editor.trigger('storage:store', data)\n      }\n    } catch (err) {\n      if(isLater) {\n        editor.trigger('storage:error', err)\n        editor.trigger('storage:error:store', err)\n        editor.trigger('storage:end')\n      } else {\n        throw err;\n      }\n    }\n  };\n\n  // Start the cooldown period\n  const startCooldown = () => {\n    isCoolingDown = true;\n    setTimeout(async () => {\n      if (pendingSave) {\n        // Reset the pending save flag\n        pendingSave = false;\n        // Save the latest data once cooldown is over\n        const data = latestData;\n        latestData = null;\n        await doStore(data, true);\n      } else {\n        // Reset the cooldown flag\n        isCoolingDown = false;\n      }\n    }, options.time);\n  };\n\n  // Add the rate-limit storage\n  editor.Storage.add('rate-limit', {\n\n    // Store the data\n    // Adds a cooldown period before saving again\n    async store(data) {\n      if (isCoolingDown) {\n        pendingSave = true;\n        latestData = data;\n      } else {\n        await doStore(data, false);\n      }\n    },\n\n    // Do nothing\n    // Let the initial storage manager handle the load\n    async load(options) {\n      return storage.load(storageOptions);\n    },\n  });\n};\n"],"names":["root","factory","exports","module","define","amd","globalThis","window","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","editor","options","time","arguments","length","undefined","storage","StorageManager","getCurrentStorage","storageOptions","getCurrentOptions","setCurrent","isCoolingDown","pendingSave","latestData","addEventListener","e","preventDefault","returnValue","doStore","async","data","isLater","startCooldown","trigger","store","err","setTimeout","Storage","add","load"],"sourceRoot":""}